<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dmatek.zgb.db.warn.dao.AbnormalBaseDao">
	<sql id="selectProperty">
		UUID uuid,NODEID nodeId,NODENAME nodeName,
		REGIONID regionId,REGIONNAME regionName,GROUPID groupId,
		GROUPNAME groupName,CURDISTIME curDisTime,
		SLEEPTIME sleepTime,CREATETIME createTime,HANDLE isHandle,
		HANDLETIME handleTime,CLEAR isClear,CLEARTIME clearTime 
	</sql>
	<sql id="insertProperty">
		(UUID,NODEID,NODENAME,
		REGIONID,REGIONNAME,GROUPID,GROUPNAME,CURDISTIME,
		SLEEPTIME,CREATETIME,HANDLE,HANDLETIME,CLEAR,CLEARTIME)  
	</sql>
	<sql id="insertValues">
		(#{abnormalBaseWarn.uuid},#{abnormalBaseWarn.nodeId},
		 #{abnormalBaseWarn.nodeName},#{abnormalBaseWarn.regionId},
		 #{abnormalBaseWarn.regionName},#{abnormalBaseWarn.groupId},
		 #{abnormalBaseWarn.groupName},#{abnormalBaseWarn.curDisTime},
		 #{abnormalBaseWarn.sleepTime},#{abnormalBaseWarn.createTime},
		 #{abnormalBaseWarn.isHandle},#{abnormalBaseWarn.handleTime},
		 #{abnormalBaseWarn.isClear},#{abnormalBaseWarn.clearTime})
	</sql>
	<insert id="addAbnormalBase" parameterType="com.dmatek.zgb.warn.bean.AbnormalBaseWarn">
		INSERT INTO abnormalbase <include refid="insertProperty"></include>
		VALUES <include refid="insertValues"></include>
	</insert>
	<delete id="deleteAbnormalBase" parameterType="java.lang.String">
		DELETE FROM abnormalbase WHERE UUID=#{uuid}
	</delete>
	<select id="findOne" resultType="com.dmatek.zgb.warn.bean.AbnormalBaseWarn">
		SELECT UUID uuid,NODEID nodeId,NODENAME nodeName,
		REGIONID regionId,REGIONNAME regionName,GROUPID groupId,
		GROUPNAME groupName,CURDISTIME curDisTime,
		SLEEPTIME sleepTime,CREATETIME createTime,HANDLE isHandle,
		HANDLETIME handleTime,CLEAR isClear,CLEARTIME clearTime 
		FROM abnormalbase  
		WHERE UUID=#{uuid}
	</select>
	<select id="findAll" resultType="com.dmatek.zgb.warn.bean.AbnormalBaseWarn">
		SELECT UUID uuid,NODEID nodeId,NODENAME nodeName,
		REGIONID regionId,REGIONNAME regionName,GROUPID groupId,
		GROUPNAME groupName,CURDISTIME curDisTime,
		SLEEPTIME sleepTime,CREATETIME createTime,HANDLE isHandle,
		HANDLETIME handleTime,CLEAR isClear,CLEARTIME clearTime 
		FROM abnormalbase  
	</select>
	<select id="findWarnCardReportInfo" resultType="com.dmatek.zgb.report.warn.bean.WarnTypeCardReportInfo">
		select 
		(SELECT COUNT(*) FROM abnormalbase WHERE DATEDIFF(NOW(),CREATETIME) &lt; #{peroid}) 
		AS totalNumber, 
		(SELECT COUNT(*) FROM abnormalbase WHERE (HANDLE = 1 AND DATEDIFF(NOW(),CREATETIME) &lt; #{peroid})) 
		AS handleNumber,
		(SELECT COUNT(*) FROM abnormalbase WHERE (HANDLE = 0 AND DATEDIFF(NOW(),CREATETIME) &lt; #{peroid})) 
		AS notHandleNumber
	</select>
	<select id="findGroupsWarnCardReportInfo" resultType="com.dmatek.zgb.report.warn.bean.GroupCardReportWarnInfo">
		SELECT 
		g.GROUP_ID groupId,g.GROUP_NAME groupName,
		(SELECT COUNT(*) FROM groups gl INNER JOIN abnormalbase p on gl.GROUP_ID=p.GROUPID where gl.GROUP_ID=g.GROUP_ID AND DATEDIFF(NOW(),p.CREATETIME) &lt; #{peroid}) 
			AS totalNumber,
		(SELECT COUNT(*) FROM groups gl INNER JOIN abnormalbase p on gl.GROUP_ID=p.GROUPID where gl.GROUP_ID=g.GROUP_ID AND p.HANDLE = 1 AND DATEDIFF(NOW(),p.CREATETIME) &lt; #{peroid})
			AS handleNumber,
		(SELECT COUNT(*) FROM groups gl INNER JOIN abnormalbase p on gl.GROUP_ID=p.GROUPID where gl.GROUP_ID=g.GROUP_ID AND p.HANDLE = 0 AND DATEDIFF(NOW(),p.CREATETIME) &lt; #{peroid}) 
			AS notHandleNumber 
		FROM groups g 
	</select>
	
	<delete id="clearAbnormalBases">
		DELETE FROM abnormalbase WHERE DATEDIFF(NOW(),CREATETIME) > #{days}
	</delete>
</mapper>